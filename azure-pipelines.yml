# Azure DevOps Pipeline for Skylar Matthews Resume Website
# Alternative to GitHub Actions

trigger:
  branches:
    include:
    - main
    - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  nodeVersion: '18'
  terraformVersion: '1.5.0'

stages:
- stage: Build
  displayName: 'Build Application'
  jobs:
  - job: Build
    displayName: 'Build Job'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Install Node.js'

    - script: |
        npm ci
        npm run lint
        npm run build
      displayName: 'Install dependencies and build'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'dist'
        artifactName: 'website-build'
      displayName: 'Publish build artifacts'

- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployToAzure
    displayName: 'Deploy to Azure'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: $(terraformVersion)
            displayName: 'Install Terraform'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure Service Connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                cd terraform
                terraform init
                terraform apply -auto-approve
                
                STORAGE_ACCOUNT=$(terraform output -raw storage_account_name)
                RESOURCE_GROUP=$(terraform output -raw resource_group_name)
                
                echo "##vso[task.setvariable variable=storageAccount]$STORAGE_ACCOUNT"
                echo "##vso[task.setvariable variable=resourceGroup]$RESOURCE_GROUP"
            displayName: 'Deploy Infrastructure'

          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: 'website-build'
              downloadPath: '$(System.ArtifactsDirectory)'
            displayName: 'Download build artifacts'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'Azure Service Connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az storage blob upload-batch \
                  --destination '$web' \
                  --source $(System.ArtifactsDirectory)/website-build/ \
                  --account-name $(storageAccount) \
                  --auth-mode login \
                  --overwrite
                
                # Purge CDN
                CDN_PROFILE=$(echo "$(resourceGroup)" | sed 's/rg-//')-cdn
                CDN_ENDPOINT=$(echo "$(resourceGroup)" | sed 's/rg-//')-endpoint
                
                az cdn endpoint purge \
                  --profile-name "$CDN_PROFILE" \
                  --name "$CDN_ENDPOINT" \
                  --resource-group "$(resourceGroup)" \
                  --content-paths "/*"
            displayName: 'Deploy Website and Purge CDN'
